"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-view-transitions";
exports.ids = ["vendor-chunks/next-view-transitions"];
exports.modules = {

/***/ "(ssr)/./node_modules/next-view-transitions/dist/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/next-view-transitions/dist/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Link: () => (/* binding */ Link),\n/* harmony export */   ViewTransitions: () => (/* binding */ ViewTransitions)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"(ssr)/./node_modules/next/dist/api/link.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* __next_internal_client_entry_do_not_use__ Link,ViewTransitions auto */ \n\n\n\n// TODO: This implementation might not be complete when there are nested\n// Suspense boundaries during a route transition. But it should work fine for\n// the most common use cases.\nfunction useBrowserNativeTransitions() {\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.usePathname)();\n    const currentPathname = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(pathname);\n    // This is a global state to keep track of the view transition state.\n    const [currentViewTransition, setCurrentViewTransition] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        if (!(\"startViewTransition\" in document)) {\n            return ()=>{};\n        }\n        const onPopState = ()=>{\n            let pendingViewTransitionResolve;\n            const pendingViewTransition = new Promise((resolve)=>{\n                pendingViewTransitionResolve = resolve;\n            });\n            const pendingStartViewTransition = new Promise((resolve)=>{\n                // @ts-ignore\n                document.startViewTransition(()=>{\n                    resolve();\n                    return pendingViewTransition;\n                });\n            });\n            setCurrentViewTransition([\n                pendingStartViewTransition,\n                pendingViewTransitionResolve\n            ]);\n        };\n        window.addEventListener(\"popstate\", onPopState);\n        return ()=>{\n            window.removeEventListener(\"popstate\", onPopState);\n        };\n    }, []);\n    if (currentViewTransition && currentPathname.current !== pathname) {\n        // Whenever the pathname changes, we block the rendering of the new route\n        // until the view transition is started (i.e. DOM screenshotted).\n        (0,react__WEBPACK_IMPORTED_MODULE_3__.use)(currentViewTransition[0]);\n    }\n    // Keep the transition reference up-to-date.\n    const transitionRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(currentViewTransition);\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        transitionRef.current = currentViewTransition;\n    }, [\n        currentViewTransition\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        // When the new route component is actually mounted, we finish the view\n        // transition.\n        currentPathname.current = pathname;\n        if (transitionRef.current) {\n            transitionRef.current[1]();\n            transitionRef.current = null;\n        }\n    }, [\n        pathname\n    ]);\n}\nconst ViewTransitionsContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_3__.createContext)(()=>()=>{});\nfunction ViewTransitions({ children }) {\n    const [finishViewTransition, setFinishViewTransition] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        if (finishViewTransition) {\n            finishViewTransition();\n            setFinishViewTransition(null);\n        }\n    }, [\n        finishViewTransition\n    ]);\n    useBrowserNativeTransitions();\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ViewTransitionsContext.Provider, {\n        value: setFinishViewTransition,\n        children: children\n    });\n}\nfunction useSetFinishViewTransition() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_3__.use)(ViewTransitionsContext);\n}\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\n// copied from https://github.com/vercel/next.js/blob/66f8ffaa7a834f6591a12517618dce1fd69784f6/packages/next/src/client/link.tsx#L180-L191\nfunction isModifiedEvent(event) {\n    const eventTarget = event.currentTarget;\n    const target = eventTarget.getAttribute(\"target\");\n    return target && target !== \"_self\" || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download\n    event.nativeEvent && event.nativeEvent.which === 2;\n}\n// copied from https://github.com/vercel/next.js/blob/66f8ffaa7a834f6591a12517618dce1fd69784f6/packages/next/src/client/link.tsx#L204-L217\nfunction shouldPreserveDefault(e) {\n    const { nodeName } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === \"A\";\n    if (isAnchorNodeName && isModifiedEvent(e)) {\n        // ignore click for browserâ€™s default behavior\n        return true;\n    }\n    return false;\n}\n// This is a wrapper around next/link that explicitly uses the router APIs\n// to navigate, and trigger a view transition.\nfunction Link(props) {\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const finishViewTransition = useSetFinishViewTransition();\n    const { href, as, replace, scroll } = props;\n    const onClick = (0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((e)=>{\n        if (props.onClick) {\n            props.onClick(e);\n        }\n        if (\"startViewTransition\" in document) {\n            if (shouldPreserveDefault(e)) {\n                return;\n            }\n            e.preventDefault();\n            // @ts-ignore\n            document.startViewTransition(()=>new Promise((resolve)=>{\n                    (0,react__WEBPACK_IMPORTED_MODULE_3__.startTransition)(()=>{\n                        // copied from https://github.com/vercel/next.js/blob/66f8ffaa7a834f6591a12517618dce1fd69784f6/packages/next/src/client/link.tsx#L231-L233\n                        router[replace ? \"replace\" : \"push\"](as || href, {\n                            scroll: scroll != null ? scroll : true\n                        });\n                        finishViewTransition(()=>resolve);\n                    });\n                }));\n        }\n    }, [\n        props.onClick,\n        href,\n        as,\n        replace,\n        scroll\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(next_link__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _extends({}, props, {\n        onClick: onClick\n    }));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next-view-transitions/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-view-transitions/dist/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/next-view-transitions/dist/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Link: () => (/* binding */ e0),
/* harmony export */   ViewTransitions: () => (/* binding */ e1)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");

const proxy = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/shree/projects/RenocrewSolutionsWebsite/node_modules/next-view-transitions/dist/index.js`)

// Accessing the __esModule property and exporting $$typeof are required here.
// The __esModule getter forces the proxy target to create the default export
// and the $$typeof value is for rendering logic to determine if the module
// is a client boundary.
const { __esModule, $$typeof } = proxy;
const __default__ = proxy.default;

const e0 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/shree/projects/RenocrewSolutionsWebsite/node_modules/next-view-transitions/dist/index.js#Link`);

const e1 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/shree/projects/RenocrewSolutionsWebsite/node_modules/next-view-transitions/dist/index.js#ViewTransitions`);


/***/ })

};
;